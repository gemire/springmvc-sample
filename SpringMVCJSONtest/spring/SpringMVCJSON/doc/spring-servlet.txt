<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context         http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven />
	<context:annotation-config />

	<mvc:interceptors>
		<bean id="webContentInterceptor"
			class="org.springframework.web.servlet.mvc.WebContentInterceptor">
			<property name="cacheSeconds" value="0" />
			<property name="useExpiresHeader" value="true" />
			<property name="useCacheControlHeader" value="true" />
			<property name="useCacheControlNoStore" value="true" />
			<!--
				use this to set caching on particular views <property
				name="cacheMappings"> <props> <prop
				key="/myUncachedController">0</prop> </props> </property>
			-->
		</bean>
	</mvc:interceptors>



	<import resource="controllers.xml" />

	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>

				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<!-- will look to the id of a bean in this or other files for view -->
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<!--
					will look to internal resource based on URI see
					http://localhost:8080/SpringMVCTest/jspSample.html in this app and
					JSPSampleController
				-->
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/WEB-INF/views/" />
					<property name="suffix" value=".jsp" />
					<property name="order" value="50" /> <!-- must be the last -->
				</bean>
				<!--
					configured to handle tiles requests see
					http://localhost:8080/SpringMVCTest/tilestest.html and
					TilesTestController
				-->
				<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<property name="viewClass">
						<value> org.springframework.web.servlet.view.tiles2.TilesView
						</value>
					</property>
					<property name="order" value="1" />
				</bean>


			</list>
		</property>
<!-- 			<property name="defaultViews">
	
	<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />

				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<constructor-arg>
						<ref bean="jaxbMarshaller" />
					</constructor-arg>
				</bean>
			</list>


	<list>
		<bean
			class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
			<property name="prefixJson" value="false" />
			<property name="objectMapper" ref="jacksonObjectMapper" />
		</bean>
		<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
			<property name="marshaller">
				<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
					<property name="contextPath" value="com.appservices.dtos" />
				</bean>
			</property>
		</bean>
	</list> 
			
		
			
			
		</property>
		
		 -->	
	</bean>

<bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
	<property name="classesToBeBound">
	<list>
	<value>com.dhenton9000.spring.mvc.model.JavaBean</value>
	</list>
	</property>
<!-- 
	this will pretty print the Jason ?
	<property name="marshallerProperties">
		<map>
			<entry>
				<key>
					<util:constant static-field="javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT" />
				</key>
				<value type="java.lang.Boolean">true</value>
			</entry>
		</map>
	</property> 
 -->
</bean>


<!--  list of converters add custom ones here
 <bean
	class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	<property name="messageConverters">
		<list>
			<bean id="byteArrayMessageConverter"
				class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			<bean id="jacksonMessageConverter"
				class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />
		</list>
	</property>
</bean> 
-->



	<bean id="tilesConfigurator"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles/tiles-defs.xml</value>
				<!-- white space sensitive reformatting screws this up!! -->
			</list>
		</property>
	</bean>

</beans>
