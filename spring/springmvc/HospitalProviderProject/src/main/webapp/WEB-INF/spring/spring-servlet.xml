<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context         http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	<!-- Configures the @Controller programming model -->	
	<context:annotation-config   />
        <!-- configures things like RequestBody ResponseBody Json handling -->
        <mvc:annotation-driven   />
	<mvc:interceptors>
		<bean id="webContentInterceptor"
			class="org.springframework.web.servlet.mvc.WebContentInterceptor">
			<property name="cacheSeconds" value="0" />
			<property name="useExpiresHeader" value="true" />
			<property name="useCacheControlHeader" value="true" />
			<property name="useCacheControlNoStore" value="true" />
			<!--
				use this to set caching on particular views <property
				name="cacheMappings"> <props> <prop
				key="/myUncachedController">0</prop> </props> </property>
			-->
		</bean>
	</mvc:interceptors>



	<import resource="controllers.xml" />

	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>

				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
        
				<!-- will look to the id of a bean in this or other files for view -->
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<!--
					will look to internal resource based on URI see
					http://localhost:8080/SpringMVCJSON/jspSample.html in this app and
					JSPSampleController
				-->
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/WEB-INF/views/" />
					<property name="suffix" value=".jsp" />
					<property name="order" value="50" /> <!-- must be the last -->
				</bean>
				<!--
					configured to handle tiles requests see
					http://localhost:8080/SpringMVCJSON/tilestest.html and
					TilesTestController
				-->
				<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<property name="viewClass">
						<value> org.springframework.web.servlet.view.tiles2.TilesView
						</value>
					</property>
					<property name="order" value="1" />
				</bean>


			</list>
		</property>

	</bean>



	<bean id="tilesConfigurator"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles/tiles-defs.xml</value>
				<!-- white space sensitive reformatting screws this up!! -->
			</list>
		</property>
	</bean>

</beans>
