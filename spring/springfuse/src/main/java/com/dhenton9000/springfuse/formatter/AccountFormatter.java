/*
 * (c) Copyright 2005-2011 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-mvc-3:src/main/java/formatter/Formatter.e.vm.java
 */
package com.dhenton9000.springfuse.formatter;

import java.text.ParseException;
import java.util.Locale;

import com.dhenton9000.springfuse.domain.Account;
import com.dhenton9000.springfuse.service.AccountService;
import com.dhenton9000.springfuse.formatter.support.DiscoverableFormatter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

/**
 * {@link Formatter} for {@link Account} that is picked by automatically by {@link CustomFormattingConversionServiceFactory}
 * 
 * @see Formatter
 * @see CustomFormattingConversionServiceFactory
 */
@Component
public class AccountFormatter implements DiscoverableFormatter<Account> {

    @Autowired
    private AccountService accountService;

    @Override
    public Class<Account> getTarget() {
        return Account.class;
    }

    @Override
    public String print(Account account, Locale locale) {
        if (account == null) {
            return "";
        }

        StringBuilder sb = new StringBuilder();
        // make a nice display string here...

        if (account.getUsername() != null) {
            sb.append(account.getUsername()).append(" ");
        }

        if (account.getEmail() != null) {
            sb.append(account.getEmail()).append(" ");
        }

        if (sb.length() > 0) {
            return sb.toString();
        } else if (account.isPrimaryKeySet()) {
            return account.getPrimaryKey();
        } else {
            return account.toString();
        }
    }

    @Override
    public Account parse(String text, Locale locale) throws ParseException {
        if (text == null || text.isEmpty()) {
            return new Account();
        }
        Account account = accountService.getByPrimaryKey(text);
        return account != null ? account : new Account();
    }
}
