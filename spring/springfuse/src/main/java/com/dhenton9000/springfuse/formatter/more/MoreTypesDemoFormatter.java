/*
 * (c) Copyright 2005-2011 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-mvc-3:src/main/java/formatter/Formatter.e.vm.java
 */
package com.dhenton9000.springfuse.formatter.more;

import java.text.ParseException;
import java.util.Locale;

import com.dhenton9000.springfuse.domain.more.MoreTypesDemo;
import com.dhenton9000.springfuse.service.more.MoreTypesDemoService;
import com.dhenton9000.springfuse.formatter.support.DiscoverableFormatter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

/**
 * {@link Formatter} for {@link MoreTypesDemo} that is picked by automatically by {@link CustomFormattingConversionServiceFactory}
 * 
 * @see Formatter
 * @see CustomFormattingConversionServiceFactory
 */
@Component
public class MoreTypesDemoFormatter implements DiscoverableFormatter<MoreTypesDemo> {

    @Autowired
    private MoreTypesDemoService moreTypesDemoService;

    @Override
    public Class<MoreTypesDemo> getTarget() {
        return MoreTypesDemo.class;
    }

    @Override
    public String print(MoreTypesDemo moreTypesDemo, Locale locale) {
        if (moreTypesDemo == null) {
            return "";
        }

        StringBuilder sb = new StringBuilder();
        // make a nice display string here...

        if (moreTypesDemo.getNumberInt() != null) {
            sb.append(moreTypesDemo.getNumberInt()).append(" ");
        }

        if (moreTypesDemo.getNumberLong() != null) {
            sb.append(moreTypesDemo.getNumberLong()).append(" ");
        }

        if (moreTypesDemo.getNumberDouble() != null) {
            sb.append(moreTypesDemo.getNumberDouble()).append(" ");
        }

        if (moreTypesDemo.getNumberFloat() != null) {
            sb.append(moreTypesDemo.getNumberFloat()).append(" ");
        }

        if (moreTypesDemo.getNumberBigInteger() != null) {
            sb.append(moreTypesDemo.getNumberBigInteger()).append(" ");
        }

        if (moreTypesDemo.getNumberBigDecimal() != null) {
            sb.append(moreTypesDemo.getNumberBigDecimal()).append(" ");
        }

        if (moreTypesDemo.getDateJavaTemporalDate() != null) {
            sb.append(moreTypesDemo.getDateJavaTemporalDate()).append(" ");
        }

        if (moreTypesDemo.getDateJavaTemporalTimestamp() != null) {
            sb.append(moreTypesDemo.getDateJavaTemporalTimestamp()).append(" ");
        }

        if (moreTypesDemo.getDateJoda() != null) {
            sb.append(moreTypesDemo.getDateJoda()).append(" ");
        }

        if (moreTypesDemo.getDateTimeJoda() != null) {
            sb.append(moreTypesDemo.getDateTimeJoda()).append(" ");
        }

        if (sb.length() > 0) {
            return sb.toString();
        } else if (moreTypesDemo.isPrimaryKeySet()) {
            return moreTypesDemo.getPrimaryKey().toString();
        } else {
            return moreTypesDemo.toString();
        }
    }

    @Override
    public MoreTypesDemo parse(String text, Locale locale) throws ParseException {
        if (text == null || text.isEmpty()) {
            return new MoreTypesDemo();
        }
        MoreTypesDemo moreTypesDemo = moreTypesDemoService.getByPrimaryKey(new Integer(text));
        return moreTypesDemo != null ? moreTypesDemo : new MoreTypesDemo();
    }
}
