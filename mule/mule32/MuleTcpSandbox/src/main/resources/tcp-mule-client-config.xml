<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:tcp="http://www.mulesoft.org/schema/mule/tcp"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xsi:schemaLocation="
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.2/mule.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
        http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.2/mule-vm.xsd 
        http://www.mulesoft.org/schema/mule/tcp http://www.mulesoft.org/schema/mule/tcp/3.2/mule-tcp.xsd">
  
    <global-property name="PORT_NUMBER" value="6121" />
    <tcp:connector name="tcpConnector" keepAlive="true" clientSoTimeout="1000" keepSendSocketOpen="true">
        <tcp:eof-protocol payloadOnly="true"/>
    </tcp:connector>
    
       
    <spring:beans>
     
        <spring:bean id="messageSender" 
                     class="com.dhenton9000.mule.tcp.client.TcpClientUMO"  
                     scope="singleton" />
         
        <spring:bean id="testServer" init-method="startServer" destroy-method="killServer"
                     class="com.dhenton9000.example.tcp.test.server.TestingServer">  
            <spring:property name="serverSOTimeout" value="2000" />
            <spring:property name="portNumber" value="${PORT_NUMBER}" />
        </spring:bean>            
        
    </spring:beans>
   
    
 
    <byte-array-to-object-transformer name="byteArrayToObject" />

    <tcp:endpoint  name="tcpendpoint" host="localhost" port="${PORT_NUMBER}" connector-ref="tcpConnector" exchange-pattern="request-response" transformer-refs="byteArrayToObject" responseTransformer-refs="byteArrayToObject"/>
<!--
    <flow name="messageFlow">
        <vm:inbound-endpoint path="messagePath" />
        <component>
            <spring-object bean="messageSender" />
        </component>
        <tcp:outbound-endpoint ref="tcpendpoint"/>
    </flow>
  -->
    <flow name="tcpFlow">
        <vm:inbound-endpoint path="tcpPath" exchange-pattern="request-response" />
        <tcp:outbound-endpoint ref="tcpendpoint" exchange-pattern="request-response"  />
    </flow>

</mule>

