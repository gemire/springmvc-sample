/**
 * Please modify this class to meet your needs
 * This class is not complete
 */
package com.dhenton9000.registration.components.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import org.mule.api.MuleContext;
import org.mule.api.context.MuleContextAware;
import org.apache.log4j.*;
import com.dhenton9000.registration.components.ws.RegisterResponse;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Calendar;
import org.mule.DefaultMuleMessage;

/**
 * This class was generated by Apache CXF 2.5.1
 * 2012-01-26T15:49:54.106-06:00
 * Generated source version: 2.5.1
 * 
 */
@javax.jws.WebService(serviceName = "RegistrationServiceWSDL",
portName = "RegistrationServiceWSDLSOAP",
targetNamespace = "uri:dhenton9000:registrationService",
wsdlLocation = "src/main/resources/RegistrationService.wsdl",
endpointInterface = "com.dhenton9000.registration.components.ws.RegistrationServiceWSDL")
public class RegistrationServiceWSDLImpl implements RegistrationServiceWSDL, MuleContextAware {

    private static final Logger log = Logger.getLogger(RegistrationServiceWSDLImpl.class.getName());
    private MuleContext muleContext = null;

    /* (non-Javadoc)
     * @see com.dhenton9000.registration.components.ws.RegistrationServiceWSDL#register(com.dhenton9000.registration.components.ws.RegisterInput  inputParameter )*
     */
    @Override
    public com.dhenton9000.registration.components.ws.RegisterResponse register(RegisterInput inputParameter) {


        try {
            com.dhenton9000.registration.components.ws.RegisterResponse _return = new RegisterResponse();
            _return.setCurrentTime(Calendar.getInstance());
            _return.setPaymentDepartment("Fred Dept");
            _return.setTotalCost(BigDecimal.valueOf(2442.22d));
            _return.setResponseInformation(inputParameter.getName());

            String path = "vm:/fileOutPath";
            DefaultMuleMessage dM = new DefaultMuleMessage(inputParameter, getMuleContext());
            getMuleContext().getClient().dispatch(path, dM);




            return _return;
        } catch (java.lang.Exception ex) {
            log.error("webservice error", ex);
            throw new RuntimeException(ex);
        }
    }

    /**
     * @return the muleContext
     */
    public MuleContext getMuleContext() {
        return muleContext;
    }

    /**
     * @param muleContext the muleContext to set
     */
    public void setMuleContext(MuleContext muleContext) {
        log.debug("$$$$$$$$ " + muleContext);
        this.muleContext = muleContext;
    }
}
