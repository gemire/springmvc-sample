<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:spring="http://www.springframework.org/schema/beans" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
    xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
    xmlns:test="http://www.mulesoft.org/schema/mule/test"
        xsi:schemaLocation="
               http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
               http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.0/mule.xsd
               http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/3.0/mule-scripting.xsd
               http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/3.0/mule-test.xsd
               http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.0/mule-vm.xsd">

    <processor-chain name="composite1">
        <description>Composite thats appands 'ayz'</description>
        <append-string-transformer message="x" />
        <append-string-transformer message="y" />
        <append-string-transformer message="z" />
    </processor-chain>

    <flow name="flow">
        <vm:inbound-endpoint path="in" exchange-pattern="request-response" />
        <append-string-transformer message="1" />
        <append-string-transformer message="2" />
        <processor ref="composite1" />
        <processor-chain>
            <append-string-transformer message="a" />
            <append-string-transformer message="b" />
            <append-string-transformer message="c" />
        </processor-chain>
        <append-string-transformer message="3" />
        <default-service-exception-strategy />
    </flow>

    <flow name="flow2">
        <composite-source>
            <vm:inbound-endpoint path="in2" exchange-pattern="request-response" />
            <vm:inbound-endpoint path="in3" exchange-pattern="request-response" />
        </composite-source>
        <append-string-transformer message="1" />
        <processor ref="composite1" />
    </flow>

    <flow name="inout">
        <vm:inbound-endpoint path="inout-in" exchange-pattern="one-way" />
        <vm:outbound-endpoint path="inout-out" exchange-pattern="one-way" />
    </flow>

    <flow name="inout-append">
        <vm:inbound-endpoint path="inout-append-in" exchange-pattern="one-way" />
        <append-string-transformer message="inout" />
        <vm:outbound-endpoint path="inout-append-out" exchange-pattern="one-way" />
    </flow>

    <flow name="split-aggregate">
        <vm:inbound-endpoint path="split-aggregate-in" exchange-pattern="one-way" />
        <splitter evaluator="bean" expression="fruit" enableCorrelation="ALWAYS" />
        <script:transformer>
            <script:script engine="groovy">
                ((org.mule.tck.testmodels.fruit.Fruit)payload).bite();
                return payload;
            </script:script>
        </script:transformer>
        <collection-aggregator />
        <vm:outbound-endpoint path="split-aggregate-out" exchange-pattern="one-way" />
    </flow>
    
    <flow name="split-aggregate-list">
        <vm:inbound-endpoint path="split-aggregate-list-in" exchange-pattern="one-way" />
        <collection-splitter enableCorrelation="IF_NOT_SET" />
        <script:transformer>
            <script:script engine="groovy">
                ((org.mule.tck.testmodels.fruit.Fruit)payload).bite();
                return payload;
            </script:script>
        </script:transformer>
        <collection-aggregator />
        <vm:outbound-endpoint path="split-aggregate-list-out" exchange-pattern="one-way" />
    </flow>

    <flow name="split-filter-aggregate">
        <vm:inbound-endpoint path="split-filter-aggregate-in" exchange-pattern="one-way" />
        <splitter evaluator="bean" expression="fruit" enableCorrelation="ALWAYS" />
        <message-filter throwOnUnaccepted="false">
	        <not-filter>
	            <or-filter>
	                <payload-type-filter expectedType="org.mule.tck.testmodels.fruit.Banana" />
	                <payload-type-filter expectedType="org.mule.tck.testmodels.fruit.Orange" />
	            </or-filter>
	        </not-filter>
        </message-filter>
        <collection-aggregator failOnTimeout="false" timeout="1000" />
        <vm:outbound-endpoint path="split-filter-aggregate-out" exchange-pattern="one-way" />
    </flow>
    
    <flow name="message-chunk-split-aggregate">
        <vm:inbound-endpoint path="message-chunk-split-aggregate-in" exchange-pattern="one-way" />
        <message-chunk-splitter messageSize="20" enableCorrelation="ALWAYS"/>
        <message-chunk-aggregator />
        <vm:outbound-endpoint path="message-chunk-split-aggregate-out" exchange-pattern="one-way" />
    </flow>

    <flow name="component">
        <vm:inbound-endpoint path="components" exchange-pattern="request-response" />
        <echo-component/>
        <test:component appendString="test"/>
    </flow>

    <flow name="wiretap">
        <vm:inbound-endpoint path="wiretap-in" exchange-pattern="one-way" />
        <append-string-transformer message="in" />
        <wire-tap>
            <processor-chain>
                <append-string-transformer message="tap" />
                <vm:outbound-endpoint path="wiretap-tap" exchange-pattern="one-way" />
            </processor-chain>
            <payload-type-filter expectedType="java.lang.String"/>
        </wire-tap>
        <append-string-transformer message="out" />
        <vm:outbound-endpoint path="wiretap-out" exchange-pattern="one-way" />
    </flow>

    <flow name="response">
        <vm:inbound-endpoint path="response" exchange-pattern="request-response" />
        <append-string-transformer message="a" />
        <response>
            <append-string-transformer message="i" />
        </response>
        <append-string-transformer message="b" />
        <response>
            <append-string-transformer message="f" />
            <append-string-transformer message="g" />
            <append-string-transformer message="h" />
        </response>
        <response>
            <append-string-transformer message="e" />
        </response>
        <append-string-transformer message="c" />
        <append-string-transformer message="d" />
    </flow>

    <flow name="async-oneway">
        <vm:inbound-endpoint path="async-oneway-in" exchange-pattern="one-way" />
        <append-string-transformer message="a" />
        <async>
            <append-string-transformer message="b" />
            <vm:outbound-endpoint path="async-async-oneway-out" exchange-pattern="one-way" />
            <threading-profile doThreading="true" maxThreadsActive="16"/>
        </async>    
        <append-string-transformer message="c" />    
        <vm:outbound-endpoint path="async-oneway-out" exchange-pattern="one-way" />
    </flow>

    <flow name="async-requestresponse">
        <vm:inbound-endpoint path="async-requestresponse-in" exchange-pattern="request-response" />
        <append-string-transformer message="a" />
        <async>
            <append-string-transformer message="b" />
            <vm:outbound-endpoint path="async-async-requestresponse-out" exchange-pattern="one-way" />
            <threading-profile doThreading="true" maxThreadsActive="16"/>
        </async>    
        <append-string-transformer message="c" />    
        <vm:outbound-endpoint path="async-requestresponse-out" exchange-pattern="one-way" />
    </flow>

    <flow name="async-tx">
        <vm:inbound-endpoint path="async-tx-in" exchange-pattern="request-response">
        	<vm:transaction action="ALWAYS_BEGIN"/>
        </vm:inbound-endpoint>
        <append-string-transformer message="a" />
        <async>
            <append-string-transformer message="b" />
            <vm:outbound-endpoint path="async-async-tx-out" exchange-pattern="request-response" />
            <threading-profile doThreading="true" maxThreadsActive="16"/>
        </async>    
        <append-string-transformer message="c" />    
        <vm:outbound-endpoint path="async-tx-out" exchange-pattern="request-response" />
    </flow>
    
    <!-- 
    <flow name="transactional">
        <vm:inbound-endpoint path="transactional-in" exchange-pattern="one-way">
            <vm:transaction action="ALWAYS_BEGIN"/>
        </vm:inbound-endpoint>
        <append-string-transformer message="a" />
        <transactional>
            <append-string-transformer message="b" />
            <test:component appendString="test"/>
            <vm:outbound-endpoint path="transactional-out" exchange-pattern="one-way" />
            <vm:transaction action="ALWAYS_JOIN" />
        </transactional>    
        <append-string-transformer message="c" />
        <default-service-exception-strategy />    
    </flow>

    <flow name="transactionalRollback">
        <vm:inbound-endpoint path="transactional-rollback-in" exchange-pattern="request-response">
            <vm:transaction action="ALWAYS_BEGIN"/>
        </vm:inbound-endpoint>
        <transactional>
            <test:component appendString="test"/>
            <test:component throwException="true"/>
            <vm:outbound-endpoint path="transactional-rollback-out" exchange-pattern="request-response" />
            <vm:transaction action="JOIN_IF_POSSIBLE" />
        </transactional>    
    </flow>
     -->
    
    <flow name="multicaster">
        <vm:inbound-endpoint path="multicaster-in" exchange-pattern="request-response"/>
        <all enableCorrelation="ALWAYS">
            <vm:outbound-endpoint path="multicaster-out1" exchange-pattern="one-way" />
            <vm:outbound-endpoint path="multicaster-out2" exchange-pattern="one-way" />
            <processor-chain>
                <test:component/>
                <vm:outbound-endpoint path="multicaster-out3" exchange-pattern="one-way" />
            </processor-chain>
        </all>    
    </flow>
    
    <flow name="recipient-list">
        <vm:inbound-endpoint path="recipient-list-in" exchange-pattern="request-response"/>
        <message-properties-transformer>
            <add-message-properties>
                <spring:entry key="myRecipients">
                    <spring:list>
                        <spring:value>vm://recipient-list-out1</spring:value>
                        <spring:value>vm://recipient-list-out2</spring:value>
                        <spring:value>vm://recipient-list-out3</spring:value>
                    </spring:list>
                </spring:entry>
            </add-message-properties>
        </message-properties-transformer>
        <recipient-list enableCorrelation="ALWAYS" evaluator="header" expression="myRecipients"/>
    </flow>

    <flow name="loan-broker">
        <vm:inbound-endpoint path="choice2-in" exchange-pattern="request-response"/>
        <choice>
            <when expression="payload=='foo'" evaluator="groovy">
                <append-string-transformer message=" Hello foo" />
            </when>
            <when expression="payload=='bar'" evaluator="groovy">
                <append-string-transformer message=" Hello bar" />
            </when>
            <otherwise>
                <append-string-transformer message=" Hello ?" />
            </otherwise>
        </choice>
    </flow>
    
    <flow name="flow-ref">
        <vm:inbound-endpoint path="flow-ref-in" exchange-pattern="request-response"/>
        <flow-ref name="flow"/>
        <flow-ref name="flow"/>
    </flow>

	<flow name="flow-threading-profile">
        <vm:inbound-endpoint path="flow-threading-profile-in" exchange-pattern="request-response"/>
        <append-string-transformer message=" Hello foo" />
		<threading-profile doThreading="true" maxThreadsActive="2" maxThreadsIdle="1" poolExhaustedAction="RUN"/>
    </flow>

</mule>
