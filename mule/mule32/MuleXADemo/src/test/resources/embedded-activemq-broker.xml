<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
         xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

  <!--
    This file configures an inmemory persistent store for integration testing
    see 
    http://www.mulesoft.org/mule-activemq-integration-examples
    
    -->
    
    

    <bean id="AmqDeadLetterStrategy"
                 class="org.apache.activemq.broker.region.policy.IndividualDeadLetterStrategy"
                 p:queuePrefix="DLQ." />
                 
    <bean id="AmqDefaultPolicyEntry"
                 class="org.apache.activemq.broker.region.policy.PolicyEntry"
                 p:queue="jobs.*"
                 p:deadLetterStrategy-ref="AmqDeadLetterStrategy" />
                 
    <bean id="AmqPolicyMap"
                 class="org.apache.activemq.broker.region.policy.PolicyMap"
                 p:defaultEntry-ref="AmqDefaultPolicyEntry" />
  
      
    <bean name="AmqBroker"
                 class="org.apache.activemq.broker.BrokerService"
                 p:brokerName="esb-amq-broker"
                 p:persistent="true"
                 p:dataDirectory="#(activemq.data.dir)"
                 p:useJmx="true"
                 p:useShutdownHook="false"
                 p:destinationPolicy-ref="AmqPolicyMap"
                 init-method="start"
                 destroy-method="stop" />
    
    <!-- something like this is required for automatic punt to DLQ -->
    <bean name="AmqRedeliveryPolicy"
                 class="org.apache.activemq.RedeliveryPolicy"
                 p:maximumRedeliveries="2" 
                 p:redeliveryDelay="1000"
                 p:useExponentialBackOff="false" />
    <!--           
       <spring:bean id="redeliveryPolicy" class="org.apache.activemq.RedeliveryPolicy" doc:name="redeliveryPolicy">
            <spring:property name="maximumRedeliveries" value="5"/>
            <spring:property name="initialRedeliveryDelay" value="5000"/>
            <spring:property name="redeliveryDelay" value="2000"/>
            <spring:property name="useExponentialBackOff" value="false"/>
            <spring:property name="backOffMultiplier" value="2"/>
        </spring:bean>             
     -->            
    
    <bean name="AmqConnectionFactory"
                 class="org.apache.activemq.spring.ActiveMQConnectionFactory"
                 p:brokerURL="vm://esb-amq-broker"
                 p:redeliveryPolicy-ref="AmqRedeliveryPolicy"
                 depends-on="AmqBroker" />
                 
      <bean name="AmqXAConnectionFactory"
                 class="org.apache.activemq.spring.ActiveMQXAConnectionFactory"
                 p:brokerURL="vm://esb-amq-broker"
                 p:redeliveryPolicy-ref="AmqRedeliveryPolicy"
                 depends-on="AmqBroker" />             
                 
       <!--
          <spring:bean id="amqFactory" class="org.apache.activemq.ActiveMQConnectionFactory" lazy-init="true" doc:name="amqFactory">
            <spring:property name="brokerURL" value="failover:(tcp://localhost:61616)"/>
            <spring:property name="redeliveryPolicy" ref="redeliveryPolicy"/>
        </spring:bean>
    -->
                
                 
                 
</beans>


