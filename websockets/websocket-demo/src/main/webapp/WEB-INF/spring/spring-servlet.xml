<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="         
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd      http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.0.xsd      http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
   
   
     
    <websocket:message-broker application-destination-prefix="/app">
        <websocket:stomp-endpoint path="/simplemessages">
           <!-- <websocket:handshake-handler ref="myHandler"/> -->
            <websocket:sockjs/>
        </websocket:stomp-endpoint>
        <websocket:stomp-endpoint path="/chat">
           <!-- <websocket:handshake-handler ref="myHandler"/> -->
            <websocket:sockjs/>
        </websocket:stomp-endpoint>
        <websocket:stomp-endpoint path="/registerUser">
           <!-- <websocket:handshake-handler ref="myHandler"/> -->
            <websocket:sockjs/>
        </websocket:stomp-endpoint>
        <websocket:stomp-broker-relay  
            heartbeat-receive-interval="5000"
            heartbeat-send-interval="5000" prefix="/topic,/queue"
            relay-host="localhost" relay-port="61613"
            system-login="syslogin" system-passcode="syspass" virtual-host="example.org"/>
    </websocket:message-broker>
    
    
    <!--  
    
       <websocket:message-broker application-destination-prefix="/app">
        <websocket:stomp-endpoint path="/simplemessages">
             <websocket:handshake-handler ref="myHandler"/> 
            <websocket:sockjs/>
        </websocket:stomp-endpoint>
        <websocket:stomp-broker-relay client-login="clientlogin"
            client-passcode="clientpass"
            heartbeat-receive-interval="5000"
            heartbeat-send-interval="5000" prefix="/topic,/queue"
            relay-host="relayhost" relay-port="1234"
            system-login="syslogin" system-passcode="syspass" virtual-host="example.org"/>
    </websocket:message-broker>
    
    
    
    <websocket:message-broker application-destination-prefix="/app">
        <websocket:stomp-endpoint path="/simplemessages">
            <websocket:sockjs/>
        </websocket:stomp-endpoint>
        <websocket:simple-broker prefix="/queue, /topic"/>
    </websocket:message-broker>
    -->
 


    <bean id="messageSource"   
    class="org.springframework.context.support.ResourceBundleMessageSource">  
    <property name="basenames">  
        <list>
            <value>appMessages</value>
        </list>
    </property>
    </bean>
    
    <websocket:handlers>
        <websocket:mapping path="/echoHandler" handler="perConnectionHandler"/> 
        <!--<websocket:mapping path="/echoHandler" handler="echoHandler"/>-->
        <websocket:handshake-interceptors>
            <bean class="com.dhenton9000.spring.mvc.websocket.handlers.HandshakeInterceptor"/>
        </websocket:handshake-interceptors>
    </websocket:handlers>
    <!-- use this in the handler property above for non-private channel -->
    <bean id="echoHandler" class="com.dhenton9000.spring.mvc.websocket.handlers.EchoHandler"/>
 
    <!-- this wrapper to create a new handler for each channel  -->
    <bean id="perConnectionHandler" class="org.springframework.web.socket.handler.PerConnectionWebSocketHandler">
        <constructor-arg>
            <value type="java.lang.Class">com.dhenton9000.spring.mvc.websocket.handlers.EchoHandler</value>
        </constructor-arg>
    </bean>
        
    <context:component-scan base-package="com.dhenton9000"/>
    
    <mvc:resources mapping="/resources/**" location="/resources/" />
    <mvc:annotation-driven/>
    <bean
        class="org.springframework.web.servlet.view.UrlBasedViewResolver" id="tilesViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
        <property name="order" value="1"/>
    </bean>
    <bean
        class="org.springframework.web.servlet.view.tiles3.TilesConfigurer" id="tilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles/tiles-defs.xml</value>
            </list>
        </property>
    </bean>
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="2"/>
        <!-- must be the last -->
    </bean>
</beans>
