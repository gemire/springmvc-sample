<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"

	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	xmlns:aop="http://www.springframework.org/schema/aop">

	<bean id="birt_dataSource" class="com.mysql.jdbc.jdbc2.optional.MysqlDataSource">

		<property name="user">
			<value>root</value>
		</property>
		<property name="password">
			<value></value>
		</property>
		<property name="serverName">
			<value>localhost</value>
		</property>
		<property name="port">
			<value>3306</value>
		</property>
		<property name="databaseName">
			<value>classicmodels</value>
		</property>


	</bean>


	<bean id="feedSQLMapBean" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="FeedConfig.xml" />
		<property name="dataSource" ref="birt_dataSource" />
	</bean>
	<bean id="customerFeedDAO" class="com.dhenton9000.ibatis.dao.CustomerFeedDAO">
		<property name="sqlMapClient" ref="feedSQLMapBean" />
	</bean>

	<bean id="generalCustomerGenerator"
		class="com.dhenton9000.csvfeed.customerfeed.GeneralCustomerFeedGenerator">
		<property name="sqlMapClient" ref="feedSQLMapBean" />
	</bean>


	<bean id="customerFeedColumns" class="java.util.LinkedList">
		<constructor-arg>
			<util:list list-class="java.util.LinkedList">
				<bean class="com.dhenton9000.csvfeed.ConstantColumn">
					<property name="header" value="alpha" />
					<property name="label" value="fred" />
				</bean>
				<bean class="com.dhenton9000.csvfeed.ConstantColumn">
					<property name="header" value="beta" />
					<property name="label" value="ted" />
				</bean>
				<bean class="com.dhenton9000.csvfeed.GenericMethodColumn">
					<property name="header" value="city" />
					<property name="propertyName" value="city" />
					<property name="nullValue" value="" />
				</bean>
				<bean class="com.dhenton9000.csvfeed.GenericMethodColumn">
					<property name="header" value="state" />
					<property name="propertyName" value="state" />
					<property name="nullValue" value="" />
				</bean>
				<bean class="com.dhenton9000.csvfeed.GenericMethodColumn">
					<property name="header" value="postalcode" />
					<property name="propertyName" value="postalCode" />
					<property name="nullValue" value="" />
				</bean>
				<bean class="com.dhenton9000.csvfeed.ConstantColumn">
					<property name="header" value="gamma" />
					<property name="label" value="zzzzzz" />
				</bean>
				<bean
					class="com.dhenton9000.csvfeed.customerfeed.columns.ContactNameColumn">
					<property name="header" value="Contact Name" />
				</bean>
			</util:list>
		</constructor-arg>
	</bean>

	<bean id="customerFeed" class="com.dhenton9000.csvfeed.BaseCVSFeedController">
		<property name="generators">
			<list>
				<ref bean="generalCustomerGenerator" />
			</list>
		</property>
		<property name="fullFileLocation" value="I:\\temp\\ttt.csv" />
		<property name="usingHeaders" value="true" />
		<property name="delimiterCharacter" value="|" />
		<property name="columns" ref="customerFeedColumns" />
		<property name="validationService">
			<bean class="com.dhenton9000.csvfeed.validation.NOOpValidationService" />
		</property>

		<!-- have a alternative property which is a linkedlist of linked list of 
			column objects, if you use it, it will collapse it to a single list that 
			represents the column collection, and will be in the order that you use it. 
			This would allow reuse of column collection subsets <property name="columnCollection" 
			ref="customerFeedColumnsCollection" /> -->
		<property name="encoding" value="windows-1252" />

	</bean>


</beans>
