<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.dhenton9000.mybatis.demo.mappers.UsersMapper">
 
    <!-- this will get users and groups via nested select paired with get User -->
    <resultMap id="usersResult" type="Users">
        <result property="userId" column="USERID"/>
        <result property="userName" column="USERNAME"/>
        <collection property="groups" column="USERID" javaType="ArrayList" ofType="Groups"
                    select="selectGroups" resultMap="groupsResult"/>
    </resultMap>
    
    <resultMap id="usersResultNested" type="Users">
        <result property="userId" column="USERID"/>
        <result property="userName" column="USERNAME"/>
        <collection property="groups" ofType="Groups">
            <id property="id" column="GROUP_ID" />
             <result property="groupName" column="GROUP_NAME" />
        </collection>
    </resultMap>
    
 
    <!-- this is in the interface UsersMapper.java -->
    <select id="getUser"  parameterType="java.lang.String" resultMap="usersResult">
        SELECT * FROM USERS WHERE USERID = #{id}
    </select>
    
    <select id="getUserByNested" parameterType="java.lang.String" resultMap="usersResultNested">
            <include refid="usersSQL" />
            WHERE USERID =   #{id}
        
    </select>
    
    <sql id="usersSQL">
        
        SELECT USERS.USERID, USERS.USERNAME ,
            GROUPS.ID as GROUP_ID, GROUPS.GROUP_NAME
            FROM USERS INNER JOIN GROUP_ASSIGNMENTS
            ON USERS.USERID = GROUP_ASSIGNMENTS.USER_ID
            INNER JOIN GROUPS
            ON GROUPS.ID = GROUP_ASSIGNMENTS.GROUP_ID
        
    </sql>
    
    <select id="getAllUsersWithGroupsWithNonNestedCollection" parameterType="com.dhenton9000.mybatis.demo.model.LimitParms" resultMap="usersResultNested">
        
        <include refid="usersSQL" />
        order by USERNAME
        OFFSET #{offset} ROWS FETCH NEXT #{limit} ROW ONLY
        
    </select>
    
       <select id="getAllUsersWithGroupsWithNestedSql" parameterType="com.dhenton9000.mybatis.demo.model.LimitParms" resultMap="usersResult">
        
        SELECT * FROM USERS 
        order by USERNAME
        OFFSET #{offset} ROWS FETCH NEXT #{limit} ROW ONLY
        
    </select>
 
    
 
    
    
    <resultMap id="groupsResult" type="Groups">
        <result property="id" column="groups_id_for_users"/>
        <result property="groupName" column="groups_name_for_users"/>
         
    </resultMap>
    
    <select id="selectGroups" parameterType="java.lang.String" resultMap="groupsResult">
        SELECT  GROUPS.ID as groups_id_for_users,
        GROUPS.GROUP_NAME as groups_name_for_users 
        FROM GROUPS 
        LEFT OUTER JOIN GROUP_ASSIGNMENTS ON GROUP_ASSIGNMENTS.GROUP_ID = GROUPS.ID
        WHERE GROUP_ASSIGNMENTS.USER_ID = #{id}
    </select>
    
 <!--
    <select id="getById" parameterType="int" resultMap="result">
        SELECT * FROM CONTACT WHERE CONTACT_ID = #{id}
    </select>
 
    <delete id="deleteById" parameterType="int">
        DELETE from CONTACT WHERE CONTACT_ID = #{id};
    </delete>
 
    <insert id="insert" parameterType="Contact">
    INSERT INTO CONTACT (CONTACT_EMAIL, CONTACT_NAME, CONTACT_PHONE)
        VALUES (#{name}, #{phone}, #{email});
      <selectKey keyProperty="id" resultType="int" order="AFTER">
        select last_insert_id() as id
      </selectKey>
    </insert>
 
       <update id="update" parameterType="Contact">
           UPDATE CONTACT
           SET
               CONTACT_EMAIL = #{email},
               CONTACT_NAME = #{name},
               CONTACT_PHONE = #{phone}
           WHERE CONTACT_ID = #{id};
     </update>
    -->
</mapper>