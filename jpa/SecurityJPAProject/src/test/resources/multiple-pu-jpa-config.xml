<?xml version="1.0" encoding="UTF-8"?>

<beans default-lazy-init="true" xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:security="http://www.springframework.org/schema/security" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
			http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <description><![CDATA[Main entry point for spring configuration]]>
    </description>
 
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor">
        <description>Enable exception translation for beans annotated with @Repository</description>
    </bean>

 <bean id="dataSource_eat" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="org.apache.derby.jdbc.ClientDriver"/>
        <property name="jdbcUrl" value="jdbc:derby://localhost:1527/eat"/>
        <property name="user" value="eat"/>
        <property name="password" value="eat"/>
    </bean>
 
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="org.apache.derby.jdbc.ClientDriver"/>
        <property name="jdbcUrl" value="jdbc:derby://localhost:1527/sec"/>
        <property name="user" value="sec"/>
        <property name="password" value="sec"/>
    </bean>
    <bean id="vendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
    
    </bean>
    <bean
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
        id="entityManagerFactory"  >
        <property name="dataSource" ref="dataSource" />
        <property name="persistenceUnitName" value="Test_SimpleJPA_PU" />
        <property name="jpaVendorAdapter" ref="vendorAdapter" />
        <property name="jpaDialect" ref="jpaDialect" />         
    </bean>
    
       <bean
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
        id="entityManagerFactory_eat"  >
        <property name="dataSource" ref="dataSource_eat" />
        <property name="persistenceUnitName" value="Eat_PU" />
        <property name="jpaVendorAdapter" ref="vendorAdapter" />
        <property name="jpaDialect" ref="jpaDialect" />     
         
    </bean>
    
    <!-- The EMs  you will have to wire the entity manager the old fashioned way -->
<bean class="org.springframework.orm.jpa.support.SharedEntityManagerBean"
	id="entityManager">
	<property name="entityManagerFactory" ref="entityManagerFactory" />
</bean>
<bean class="org.springframework.orm.jpa.support.SharedEntityManagerBean"
	id="entityManager_eat">
	<property name="entityManagerFactory" ref="entityManagerFactory_eat" />
</bean>
    
    
    
    
    <bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
    <bean class="org.springframework.orm.jpa.JpaTransactionManager"
          id="transactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
        <property name="jpaDialect" ref="jpaDialect" />
    </bean>
    
     <bean class="org.springframework.orm.jpa.JpaTransactionManager"
          id="transactionManager_eat">
        <property name="entityManagerFactory" ref="entityManagerFactory_eat" />
        <property name="jpaDialect" ref="jpaDialect" />
    </bean>
    
    
    
    <!-- this allows access to the sessionFactory, most likely via the @PersistenceContext annotation -->
   <!--
     <util:property-path id="sessionFactory" path="entityManagerFactory.sessionFactory" />
    <util:property-path id="sessionFactory_eat" path="entityManagerFactory_eat.sessionFactory" />
-->
    <context:component-scan base-package="com.dhenton9000.jpa"  name-generator="com.dhenton9000.jpa.util.WithoutTrailingImplBeanNameGenerator">
    </context:component-scan>
    <tx:annotation-driven />
 
    <context:mbean-server />
    <context:mbean-export registration="ignoreExisting" default-domain="dhhjpa" />
	
    <context:spring-configured />
    <context:annotation-config />

    <!-- services 
    com.dhenton9000.jpa.services.UsersServiceImpl is annotated  with @Service
    and the name-generator in the component scan will translate the 
    UsersServiceImpl to the bean name 'usersService' otherwise you will need
    to define the bean here or in the annotation 
    <bean id="usersService" class="com.dhenton9000.jpa.services.UsersServiceImpl" />
    
    -->
 
</beans>
